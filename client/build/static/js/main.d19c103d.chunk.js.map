{"version":3,"sources":["assets/img/theme/team-1-800x800.jpg","assets/img/brand/argon-react.png","store/reducers/auth.js","store/reducers/error.js","store/reducers/tasks.js","store/reducers/message.js","store/reducers/index.js","store/actions/actionTypes.js","store/store.js","store/actions/config.js","views/auth/Login.js","store/actions/authActions.js","views/auth/Register.js","components/Headers/Header.js","views/admin/Dashboard/TaskDisplayItem/TaskDisplayItem.js","views/Index.js","views/admin/Tasks/TaskTableItem.js","views/admin/Tasks/TaskForm.js","store/actions/taskActions.js","views/admin/Tasks/Tasks.js","views/admin/Task/Task.js","components/Headers/UserHeader.js","views/admin/Profile/Profile.js","routes.js","components/Navbars/AdminNavbar.js","components/Footers/AdminFooter.js","components/Sidebar/Sidebar.js","layouts/Admin.js","components/Footers/AuthFooter.js","components/Navbars/AuthNavbar.js","layouts/Auth.js","index.js"],"names":["module","exports","initialState","token","localStorage","getItem","user","isAuthenticated","isLoading","error","status","tasks","task","message","combineReducers","auth","state","action","type","payload","setItem","removeItem","Object","prototype","hasOwnProperty","call","msg","push","deleted","i","length","_id","splice","middleWares","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","headerConfig","getState","config","headers","Authorization","Login","props","handleChange","e","target","setState","id","value","handleSubmit","preventDefault","userName","password","username","login","this","to","className","Col","lg","md","Card","CardHeader","CardBody","Form","role","onSubmit","FormGroup","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","onChange","autoComplete","Button","color","Row","xs","href","onClick","React","Component","defaultProps","withRouter","connect","dispatch","axios","post","then","res","data","catch","errors","undefined","response","Register","validations","updatedUser","updatedValidations","validity","key","validateField","formValidity","test","trim","firstName","lastName","email","console","log","register","confirmpassword","mapDispatchToProps","Header","tasksLoading","stats","todos","totalTasks","totalTodos","todosLeft","taskTodoModified","taskCreated","j","completed","Date","modified","getTime","created","progress","Number","toFixed","getStats","Container","fluid","xl","CardTitle","tag","moment","fromNow","TaskDisplayItem","title","description","category","inverse","Badge","CardText","Index","CardColumns","map","TaskTableItem","useState","modalOpen","setModalOpen","toggle","onDelete","forEach","todo","calculateProgress","scope","Progress","max","barClassName","size","Modal","contentClassName","isOpen","aria-label","data-dismiss","aria-hidden","TaskForm","clearState","content","inputChangeHandler","addTodo","todoChangeHandler","checkErrors","lastTodo","updatedErrors","toggleModal","createTask","newProps","showModal","titleError","descError","todoError","Spinner","style","width","height","row","Label","for","sm","name","invalid","FormFeedback","index","Tasks","handletaskDelete","taskId","deleteTask","Table","responsive","delete","Task","todoStateChangeHandler","prevState","updateHandler","updatedTask","updateTask","handleUpdateContent","element","edit","onChangeHandler","nextState","onEditStateChangeHandler","nextEditState","loaded","location","pathname","split","fetchTaskById","clearTask","format","defaultChecked","bind","htmlFor","CardFooter","nextProps","get","result","patch","UserHeader","Profile","hanldeSubmit","updateUser","fontSize","emailProp","routes","path","icon","component","hideInSidebar","layout","logout","brandText","Navbar","expand","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","Media","DropdownMenu","right","DropdownItem","header","Link","divider","Footer","rel","NavItem","NavLink","Sidebar","collapseOpen","toggleCollapse","closeCollapse","createLinks","prop","NavLinkRRD","activeClassName","activeRoute","routeName","indexOf","navbarBrandProps","bgColor","logo","innerLink","outterLink","NavbarBrand","aria-labelledby","alt","src","require","Collapse","Logo","Loader","radius","margin","Admin","stateConsistencyCheck","loadUser","getRoutes","getBrandText","routeConfig","mainContentRef","createRef","imgSrc","imgAlt","ref","from","AdminFooter","AdminNavbar","UncontrolledCollapse","toggler","Auth","document","body","classList","add","remove","AuthNavbar","AuthFooter","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d19c103d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/team-1-800x800.53033970.jpg\";","module.exports = __webpack_public_path__ + \"static/media/argon-react.f38ddea9.png\";","import * as actionTypes from 'store/actions/actionTypes';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    user: {},\r\n    isAuthenticated: false,\r\n    isLoading: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const token = localStorage.getItem('token');\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n        case actionTypes.USER_UPDATE_START:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case actionTypes.USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                token\r\n            };\r\n        case actionTypes.USER_LOADED:\r\n        case actionTypes.USER_UPDATE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.payload.user,\r\n                isLoading: false,\r\n                isAuthenticated: true\r\n            };\r\n        case actionTypes.AUTH_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return {\r\n                ...state,\r\n                user: action.payload.user,\r\n                token: action.payload.token,\r\n                isAuthenticated: true,\r\n                isLoading: false\r\n            };\r\n        case actionTypes.USER_LOGOUT:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                user: {},\r\n                token: null\r\n            };\r\n        case actionTypes.AUTH_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                user: {},\r\n                token: null\r\n            };\r\n        case actionTypes.USER_UPDATE_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as actionTypes from 'store/actions/actionTypes';\r\n\r\nconst initialState = {\r\n    error: {},\r\n    status: null\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.SHOW_ERROR:\r\n            if (Object.prototype.hasOwnProperty.call(action.payload, 'msg')) {\r\n                return {\r\n                    error: action.payload.msg,\r\n                    status: action.payload.status\r\n                };\r\n            }\r\n            return {\r\n                error: 'Server unavailable',\r\n                status: 503\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as actionTypes from 'store/actions/actionTypes';\r\n\r\nconst initialState = {\r\n    tasks: [],\r\n    task: {},\r\n    isLoading: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.TASK_CREATE_START:\r\n        case actionTypes.TASK_READ_START:\r\n        case actionTypes.TASKS_READ_START:\r\n        case actionTypes.TASK_UPDATE_START:\r\n        case actionTypes.TASK_DELETE_START:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case actionTypes.TASK_READ_SUCCESS:\r\n        case actionTypes.TASK_UPDATE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                task: action.payload,\r\n                isLoading: false\r\n            };\r\n        case actionTypes.TASK_CREATE_SUCCESS:\r\n            // eslint-disable-next-line no-case-declarations\r\n            const { tasks } = state;\r\n            tasks.push(action.payload.task);\r\n            return {\r\n                ...state,\r\n                task: action.payload.task,\r\n                tasks,\r\n                isLoading: false\r\n            };\r\n        case actionTypes.TASKS_READ_SUCCESS:\r\n            return {\r\n                ...state,\r\n                tasks: action.payload.user.tasks,\r\n                isLoading: false\r\n            };\r\n        case actionTypes.TASK_CREATE_FAIL:\r\n        case actionTypes.TASK_READ_FAIL:\r\n        case actionTypes.TASKS_READ_FAIL:\r\n        case actionTypes.TASK_UPDATE_FAIL:\r\n        case actionTypes.TASK_DELETE_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            };\r\n        case actionTypes.TASK_DELETE_SUCCESS:\r\n            // eslint-disable-next-line no-case-declarations\r\n            const { deleted } = action.payload;\r\n            for (let i = 0; i < state.tasks.length; i += 1) {\r\n                // eslint-disable-next-line no-underscore-dangle\r\n                if (state.tasks[i]._id === deleted._id) {\r\n                    state.tasks.splice(i, 1);\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                task: {}\r\n            };\r\n        case actionTypes.TASK_CLEAR:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                task: {}\r\n            };\r\n        case actionTypes.TASKS_CLEAR:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                tasks: []\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as actionTypes from 'store/actions/actionTypes';\r\n\r\nconst initialState = {\r\n    message: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.CREATE_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\nimport error from './error';\r\nimport tasks from './tasks';\r\nimport message from './message';\r\n\r\nexport default combineReducers({\r\n    auth,\r\n    error,\r\n    tasks,\r\n    message\r\n});\r\n","export const SHOW_ERROR = 'SHOW_ERROR';\r\n\r\nexport const CREATE_MESSAGE = 'CREATE_MESSAGE';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\nexport const USER_LOADING = 'USER_LOADING';\r\nexport const USER_LOADED = 'USER_LOADED';\r\n\r\nexport const TASK_CREATE_START = 'TASK_CREATE_START';\r\nexport const TASK_CREATE_SUCCESS = 'TASK_CREATE_SUCCESS';\r\nexport const TASK_CREATE_FAIL = 'TASK_CREATE_FAIL';\r\n\r\nexport const TASK_READ_START = 'TASK_READ_START';\r\nexport const TASK_READ_SUCCESS = 'TASK_READ_SUCCESS';\r\nexport const TASK_READ_FAIL = 'TASK_READ_FAIL';\r\n\r\nexport const TASKS_READ_START = 'TASKS_READ_START';\r\nexport const TASKS_READ_SUCCESS = 'TASKS_READ_SUCCESS';\r\nexport const TASKS_READ_FAIL = 'TASKS_READ_FAIL';\r\n\r\nexport const TASK_UPDATE_START = 'TASK_UPDATE_START';\r\nexport const TASK_UPDATE_SUCCESS = 'TASK_UPDATE_SUCCESS';\r\nexport const TASK_UPDATE_FAIL = 'TASK_UPDATE_FAIL';\r\n\r\nexport const TASK_DELETE_START = 'TASK_DELETE_START';\r\nexport const TASK_DELETE_SUCCESS = 'TASK_DELETE_SUCCESS';\r\nexport const TASK_DELETE_FAIL = 'TASK_DELETE_FAIL';\r\n\r\nexport const TASK_CLEAR = 'TASK_CLEAR';\r\nexport const TASKS_CLEAR = 'TASKS_CLEAR';\r\n\r\nexport const USER_UPDATE_START = 'USER_UPDATE_START';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\n","import { createStore, applyMiddleware } from 'redux';\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst initialState = {};\r\n\r\nconst middleWares = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleWares))\r\n);\r\n\r\nexport default store;\r\n","/* -- Header Configuration --\r\n * Adds the token to the request header\r\n */\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const headerConfig = (getState) => {\r\n    // Get the token from the state\r\n    const { token } = getState().auth;\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    // If token exist, add it to the header,\r\n    if (token) {\r\n        config.headers.Authorization = `Token ${token}`;\r\n    }\r\n\r\n    return config;\r\n};\r\n","import React from 'react';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Row,\r\n    Col\r\n} from 'reactstrap';\r\n\r\n// REDUX\r\nimport { connect } from 'react-redux';\r\nimport { login } from 'store/actions/authActions';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { target } = e;\r\n        this.setState({\r\n            [target.id]: target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { userName, password } = this.state;\r\n        if (userName !== '' && password !== '') {\r\n            const user = {\r\n                username: userName,\r\n                password\r\n            };\r\n            // eslint-disable-next-line react/destructuring-assignment\r\n            this.props.login(user);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { userName, password } = this.state;\r\n        const { isAuthenticated, token, isLoading } = this.props;\r\n        if (token) {\r\n            return <Redirect to=\"/admin/index\" />;\r\n        }\r\n        if (isLoading && !isAuthenticated) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"container text-center\">\r\n                        <div className=\"col mt-5\">\r\n                            <h1>Loading...</h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <Col lg=\"5\" md=\"7\" className=\"justify-content-right\">\r\n                    <Card className=\"bg-secondary shadow border-0\">\r\n                        <CardHeader className=\"bg-transparent pb-2\">\r\n                            <div className=\"text-primary text-center\">\r\n                                <h3>Sign in to continue</h3>\r\n                            </div>\r\n                        </CardHeader>\r\n                        <CardBody className=\"px-lg-5 py-lg-5\">\r\n                            <Form role=\"form\" onSubmit={this.handleSubmit}>\r\n                                <FormGroup className=\"mb-3\">\r\n                                    <InputGroup className=\"input-group-alternative\">\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <InputGroupText>\r\n                                                <i className=\"ni ni-email-83\" />\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input\r\n                                            id=\"userName\"\r\n                                            placeholder=\"Email or Username\"\r\n                                            type=\"text\"\r\n                                            value={userName}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </InputGroup>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <InputGroup className=\"input-group-alternative\">\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <InputGroupText>\r\n                                                <i className=\"ni ni-lock-circle-open\" />\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input\r\n                                            id=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            type=\"password\"\r\n                                            autoComplete=\"new-password\"\r\n                                            value={password}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </InputGroup>\r\n                                </FormGroup>\r\n                                <div className=\"text-center\">\r\n                                    <Button\r\n                                        className=\"mt-4 mb-1\"\r\n                                        color=\"primary\"\r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Sign in\r\n                                    </Button>\r\n                                </div>\r\n                            </Form>\r\n                        </CardBody>\r\n                    </Card>\r\n                    <Row className=\"mt-3\">\r\n                        <Col xs=\"6\">\r\n                            <a\r\n                                className=\"text-purple\"\r\n                                href=\"#pablo\"\r\n                                onClick={(e) => e.preventDefault()}\r\n                            >\r\n                                <small>Forgot password?</small>\r\n                            </a>\r\n                        </Col>\r\n                        <Col className=\"text-right\" xs=\"6\">\r\n                            <a\r\n                                className=\"text-primary\"\r\n                                href=\"#pablo\"\r\n                                onClick={(e) => e.preventDefault()}\r\n                            >\r\n                                <small>Create new account</small>\r\n                            </a>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    token: PropTypes.string,\r\n    isLoading: PropTypes.bool.isRequired,\r\n    login: PropTypes.func.isRequired\r\n};\r\n\r\nLogin.defaultProps = {\r\n    token: null\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n        token: state.auth.token,\r\n        isLoading: state.auth.isLoading\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, { login })(Login));\r\n","import axios from 'axios';\r\n\r\nimport * as actionTypes from './actionTypes';\r\nimport { headerConfig } from './config';\r\n\r\n// LOGIN USER\r\nexport const login = (user) => (dispatch) => {\r\n    dispatch({\r\n        type: actionTypes.AUTH_START\r\n    });\r\n    dispatch({\r\n        type: actionTypes.TASKS_READ_START\r\n    });\r\n    axios\r\n        .post('/api/auth/login', user)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: actionTypes.AUTH_SUCCESS,\r\n                payload: res.data\r\n            });\r\n            dispatch({\r\n                type: actionTypes.TASKS_READ_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            let errors = null;\r\n            if (\r\n                Object.prototype.hasOwnProperty.call(error, 'response') &&\r\n                error.response !== undefined\r\n            ) {\r\n                errors = {\r\n                    msg: error.response\r\n                };\r\n            } else {\r\n                errors = {\r\n                    msg: 'Service unavailable',\r\n                    status: 503\r\n                };\r\n            }\r\n            dispatch({\r\n                type: actionTypes.AUTH_FAIL\r\n            });\r\n            dispatch({\r\n                type: actionTypes.TASKS_READ_FAIL\r\n            });\r\n            dispatch({\r\n                type: actionTypes.SHOW_ERROR,\r\n                payload: errors\r\n            });\r\n        });\r\n};\r\n\r\n// LOGOUT USER\r\nexport const logout = () => (dispatch) => {\r\n    dispatch({\r\n        type: actionTypes.USER_LOGOUT\r\n    });\r\n};\r\n\r\n// REGISTER USER\r\nexport const register = (user) => (dispatch) => {\r\n    dispatch({\r\n        type: actionTypes.AUTH_START\r\n    });\r\n    axios\r\n        .post('/api/auth/signup', user)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: actionTypes.AUTH_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            let errors = null;\r\n            if (\r\n                Object.prototype.hasOwnProperty.call(error, 'response') &&\r\n                error.response !== undefined\r\n            ) {\r\n                errors = {\r\n                    msg: error.response\r\n                };\r\n            } else {\r\n                errors = {\r\n                    msg: 'Service unavailable',\r\n                    status: 503\r\n                };\r\n            }\r\n            dispatch({\r\n                type: actionTypes.AUTH_FAIL\r\n            });\r\n            dispatch({\r\n                type: actionTypes.SHOW_ERROR,\r\n                payload: errors\r\n            });\r\n        });\r\n};\r\n\r\n// LOAD USER\r\nexport const loadUser = () => (dispatch, getState) => {\r\n    dispatch({\r\n        type: actionTypes.USER_LOADING\r\n    });\r\n    dispatch({\r\n        type: actionTypes.TASKS_READ_START\r\n    });\r\n    axios\r\n        .get('/api/auth/user', headerConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: actionTypes.USER_LOADED,\r\n                payload: res.data\r\n            });\r\n            dispatch({\r\n                type: actionTypes.TASKS_READ_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            let errors = null;\r\n            if (\r\n                Object.prototype.hasOwnProperty.call(error, 'response') &&\r\n                error.response !== undefined\r\n            ) {\r\n                errors = {\r\n                    msg: error.response\r\n                };\r\n            } else {\r\n                errors = {\r\n                    msg: 'Service unavailable',\r\n                    status: 503\r\n                };\r\n            }\r\n            dispatch({\r\n                type: actionTypes.AUTH_FAIL\r\n            });\r\n            dispatch({\r\n                type: actionTypes.TASKS_READ_FAIL\r\n            });\r\n            dispatch({\r\n                type: actionTypes.SHOW_ERROR,\r\n                payload: errors\r\n            });\r\n        });\r\n};\r\n\r\n// UPDATE USER\r\nexport const updateUser = ({ email }) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: actionTypes.USER_UPDATE_START\r\n    });\r\n    axios\r\n        .patch('/api/auth/user', { email }, headerConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: actionTypes.USER_UPDATE_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            let errors = null;\r\n            if (\r\n                Object.prototype.hasOwnProperty.call(error, 'response') &&\r\n                error.response !== undefined\r\n            ) {\r\n                errors = {\r\n                    msg: error.response\r\n                };\r\n            } else {\r\n                errors = {\r\n                    msg: 'Service unavailable',\r\n                    status: 503\r\n                };\r\n            }\r\n            dispatch({\r\n                type: actionTypes.USER_UPDATE_FAIL\r\n            });\r\n            dispatch({\r\n                type: actionTypes.SHOW_ERROR,\r\n                payload: errors\r\n            });\r\n        });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n// REDUX\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        userName: \"\",\r\n        password: \"\",\r\n        confirmpassword: \"\",\r\n      },\r\n      validations: {\r\n        email: false,\r\n        userName: false,\r\n        password: false,\r\n        confirmpassword: false,\r\n      },\r\n      formValidity: false,\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { target } = e;\r\n    const { user, validations } = this.state;\r\n    const updatedUser = user;\r\n    const updatedValidations = validations;\r\n\r\n    let validity = true;\r\n    updatedUser[target.id] = target.value;\r\n    if (Object.prototype.hasOwnProperty.call(updatedValidations, target.id)) {\r\n      updatedValidations[target.id] = this.validateField(\r\n        target.id,\r\n        target.value\r\n      );\r\n    }\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const key in validations) {\r\n      if (Object.prototype.hasOwnProperty.call(validations, key)) {\r\n        validity = validity && validations[key];\r\n      }\r\n    }\r\n    this.setState({\r\n      user: updatedUser,\r\n      validations: updatedValidations,\r\n      formValidity: validity,\r\n    });\r\n  };\r\n\r\n  validateField = (id, value) => {\r\n    const emailTest = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n    const { user } = this.state;\r\n    switch (id) {\r\n      case \"email\":\r\n        return emailTest.test(value);\r\n      case \"userName\":\r\n        return value.length >= 2;\r\n      case \"password\":\r\n        return value.length >= 8;\r\n      case \"confirmpassword\":\r\n        return user.password === value;\r\n      default:\r\n        return value.trim() !== \"\";\r\n    }\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { user, formValidity } = this.state;\r\n    let updatedUser;\r\n    // if (formValidity) {\r\n    updatedUser = {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      email: user.email,\r\n      userName: user.userName,\r\n      password: user.password,\r\n    };\r\n    // }\r\n    console.log(updatedUser);\r\n    // eslint-disable-next-line react/destructuring-assignment\r\n    this.props.register(updatedUser);\r\n  };\r\n\r\n  render() {\r\n    const { user, validations } = this.state;\r\n    let { token, isAuthenticated, isLoading } = this.props;\r\n    // token = \"hbrehman\";\r\n    console.log(this.props);\r\n    if (token) {\r\n      return <Redirect to=\"/admin/index\" />;\r\n    }\r\n    if (isLoading && !isAuthenticated) {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"container text-center\">\r\n            <div className=\"col mt-5\">\r\n              <h1>Loading...</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <Col lg=\"6\" md=\"8\" className=\"pb-4\">\r\n          <Card className=\"bg-secondary shadow border-0\">\r\n            <CardHeader className=\"bg-transparent pb-2\">\r\n              <div className=\"text-muted text-center mt-2 mb-4\">\r\n                <h4>Sign up for free! it&apos;s easy!</h4>\r\n              </div>\r\n            </CardHeader>\r\n            <CardBody className=\"px-lg-5 py-lg-5\">\r\n              <Form role=\"form\" onSubmit={this.handleSubmit}>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <InputGroup className=\"input-group-alternative\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"ni ni-circle-08\" />\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input\r\n                          id=\"firstName\"\r\n                          placeholder=\"First Name\"\r\n                          type=\"text\"\r\n                          value={user.firstName}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <InputGroup className=\"input-group-alternative\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"ni ni-circle-08\" />\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input\r\n                          id=\"lastName\"\r\n                          placeholder=\"Last Name\"\r\n                          type=\"text\"\r\n                          value={user.lastName}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <FormGroup>\r\n                  <InputGroup className=\"input-group-alternative\">\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>\r\n                        <i className=\"ni ni-single-02\" />\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      id=\"userName\"\r\n                      placeholder=\"Username\"\r\n                      type=\"text\"\r\n                      value={user.userName}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </InputGroup>\r\n                  <div className=\"text-muted font-italic\">\r\n                    <small>\r\n                      {validations.login ? null : (\r\n                        <span className=\"text-info font-weight-700\">\r\n                          Username is required!\r\n                        </span>\r\n                      )}\r\n                    </small>\r\n                  </div>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <InputGroup className=\"input-group-alternative\">\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>\r\n                        <i className=\"ni ni-email-83\" />\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      id=\"email\"\r\n                      placeholder=\"Email Address\"\r\n                      type=\"email\"\r\n                      value={user.email}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </InputGroup>\r\n                  <div className=\"text-muted font-italic\">\r\n                    <small>\r\n                      {validations.email ? null : (\r\n                        <span className=\"text-info font-weight-700\">\r\n                          Valid email address is required!\r\n                        </span>\r\n                      )}\r\n                    </small>\r\n                  </div>\r\n                </FormGroup>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <InputGroup className=\"input-group-alternative\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"ni ni-lock-circle-open\" />\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input\r\n                          id=\"password\"\r\n                          placeholder=\"Password\"\r\n                          type=\"password\"\r\n                          value={user.password}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                      </InputGroup>\r\n                      <div className=\"text-muted font-italic\">\r\n                        <small>\r\n                          Password strength:{\" \"}\r\n                          {validations.password ? (\r\n                            <span className=\"text-success font-weight-700\">\r\n                              strong\r\n                            </span>\r\n                          ) : (\r\n                            <span className=\"text-danger font-weight-700\">\r\n                              weak\r\n                            </span>\r\n                          )}\r\n                        </small>\r\n                      </div>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <InputGroup className=\"input-group-alternative\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"ni ni-lock-circle-open\" />\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input\r\n                          id=\"confirmpassword\"\r\n                          placeholder=\"Confirm Password\"\r\n                          type=\"password\"\r\n                          value={user.confirmpassword}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                      </InputGroup>\r\n                      <div className=\"text-muted font-italic\">\r\n                        <small>\r\n                          {validations.confirmpassword ? (\r\n                            <span className=\"text-success font-weight-700\">\r\n                              Passwords match!\r\n                            </span>\r\n                          ) : (\r\n                            <span className=\"text-info font-weight-700\">\r\n                              Passwords should be matched!\r\n                            </span>\r\n                          )}\r\n                        </small>\r\n                      </div>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <div className=\"text-center\">\r\n                  <Button className=\"mt-4\" color=\"primary\" type=\"submit\">\r\n                    Create account\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.defaultProps = {\r\n  token: null,\r\n};\r\n\r\nRegister.propTypes = {\r\n  register: PropTypes.func.isRequired,\r\n  token: PropTypes.string,\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  token: state.auth.token,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  isLoading: state.auth.isLoading,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  register,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n// reactstrap components\r\nimport { Card, CardBody, CardTitle, Container, Row, Col } from 'reactstrap';\r\n// REDUX\r\nimport { connect } from 'react-redux';\r\n\r\nconst getStats = (tasks) => {\r\n    const totalTasks = tasks.length;\r\n    let totalTodos = 0;\r\n    let todosLeft = 0;\r\n    let taskTodoModified = 0;\r\n    let taskCreated = 0;\r\n    let task;\r\n    let todos;\r\n    let todo;\r\n    for (let i = 0; i < tasks.length; i += 1) {\r\n        task = tasks[i];\r\n        todos = task.todos;\r\n        totalTodos += task.todos.length;\r\n        for (let j = 0; j < todos.length; j += 1) {\r\n            todo = todos[j];\r\n            if (todo.completed === false) {\r\n                todosLeft += 1;\r\n            }\r\n        }\r\n        if (taskTodoModified < new Date(task.modified).getTime()) {\r\n            taskTodoModified = new Date(task.modified).getTime();\r\n        }\r\n        if (taskCreated < new Date(task.created).getTime()) {\r\n            taskCreated = new Date(task.created).getTime();\r\n        }\r\n    }\r\n    const progress = Number(((totalTodos - todosLeft) / totalTodos) * 100).toFixed(\r\n        2\r\n    );\r\n    return {\r\n        totalTasks,\r\n        totalTodos,\r\n        todosLeft,\r\n        progress,\r\n        taskCreated,\r\n        taskTodoModified\r\n    };\r\n};\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst Header = (props) => {\r\n    const { tasksLoading, tasks } = props;\r\n    const stats = getStats(tasks);\r\n    return (\r\n        <>\r\n            <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\r\n                <Container fluid>\r\n                    <div className=\"header-body\">\r\n                        {/* Card stats */}\r\n                        {tasksLoading ? null : (\r\n                            <Row>\r\n                                <Col lg=\"6\" xl=\"3\">\r\n                                    <Card className=\"card-stats mb-4 mb-xl-0\">\r\n                                        <CardBody>\r\n                                            <Row>\r\n                                                <div className=\"col\">\r\n                                                    <CardTitle\r\n                                                        tag=\"h5\"\r\n                                                        className=\"text-uppercase text-muted mb-0\"\r\n                                                    >\r\n                                                        Tasks\r\n                                                    </CardTitle>\r\n                                                    <span className=\"h2 font-weight-bold mb-0\">\r\n                                                        {stats.totalTasks}\r\n                                                    </span>\r\n                                                </div>\r\n                                                <Col className=\"col-auto\">\r\n                                                    <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\r\n                                                        <i className=\"fas fa-th-list\" />\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <p className=\"mt-3 mb-0 text-muted text-sm\">\r\n                                                <span className=\"text-nowrap\">\r\n                                                    updated\r\n                                                </span>\r\n                                                <span className=\"text-info ml-2\">\r\n                                                    {stats.taskCreated !== 0 ? (\r\n                                                        moment(\r\n                                                            stats.taskCreated\r\n                                                        ).fromNow()\r\n                                                    ) : (\r\n                                                        <>Not enough data</>\r\n                                                    )}\r\n                                                </span>{' '}\r\n                                            </p>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col lg=\"6\" xl=\"3\">\r\n                                    <Card className=\"card-stats mb-4 mb-xl-0\">\r\n                                        <CardBody>\r\n                                            <Row>\r\n                                                <div className=\"col\">\r\n                                                    <CardTitle\r\n                                                        tag=\"h5\"\r\n                                                        className=\"text-uppercase text-muted mb-0\"\r\n                                                    >\r\n                                                        Todos\r\n                                                    </CardTitle>\r\n                                                    <span className=\"h2 font-weight-bold mb-0\">\r\n                                                        {stats.totalTodos}\r\n                                                    </span>\r\n                                                </div>\r\n                                                <Col className=\"col-auto\">\r\n                                                    <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\r\n                                                        <i className=\"fas fa-clipboard-list\" />\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <p className=\"mt-3 mb-0 text-muted text-sm\">\r\n                                                <span className=\"text-nowrap\">\r\n                                                    updated\r\n                                                </span>\r\n                                                <span className=\"text-info ml-2\">\r\n                                                    {stats.taskTodoModified !== 0 ? (\r\n                                                        moment(\r\n                                                            stats.taskTodoModified\r\n                                                        ).fromNow()\r\n                                                    ) : (\r\n                                                        <>Not enough data</>\r\n                                                    )}\r\n                                                </span>{' '}\r\n                                            </p>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col lg=\"6\" xl=\"3\">\r\n                                    <Card className=\"card-stats mb-4 mb-xl-0\">\r\n                                        <CardBody>\r\n                                            <Row>\r\n                                                <div className=\"col\">\r\n                                                    <CardTitle\r\n                                                        tag=\"h5\"\r\n                                                        className=\"text-uppercase text-muted mb-0\"\r\n                                                    >\r\n                                                        Todos left\r\n                                                    </CardTitle>\r\n                                                    <span className=\"h2 font-weight-bold mb-0\">\r\n                                                        {stats.todosLeft}\r\n                                                    </span>\r\n                                                </div>\r\n                                                <Col className=\"col-auto\">\r\n                                                    <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\r\n                                                        <i className=\"fas fa-clipboard-list\" />\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <p className=\"mt-3 mb-0 text-muted text-sm\">\r\n                                                <span className=\"text-nowrap\">\r\n                                                    updated\r\n                                                </span>\r\n                                                <span className=\"text-info ml-2\">\r\n                                                    {stats.taskTodoModified !== 0 ? (\r\n                                                        moment(\r\n                                                            stats.taskTodoModified\r\n                                                        ).fromNow()\r\n                                                    ) : (\r\n                                                        <>Not enough data</>\r\n                                                    )}\r\n                                                </span>{' '}\r\n                                            </p>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col lg=\"6\" xl=\"3\">\r\n                                    <Card className=\"card-stats mb-4 mb-xl-0\">\r\n                                        <CardBody>\r\n                                            <Row>\r\n                                                <div className=\"col\">\r\n                                                    <CardTitle\r\n                                                        tag=\"h5\"\r\n                                                        className=\"text-uppercase text-muted mb-0\"\r\n                                                    >\r\n                                                        Productivity\r\n                                                    </CardTitle>\r\n                                                    <span className=\"h2 font-weight-bold mb-0\">\r\n                                                        {stats.progress}%\r\n                                                    </span>\r\n                                                </div>\r\n                                                <Col className=\"col-auto\">\r\n                                                    <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\r\n                                                        <i className=\"fas fa-percent\" />\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <p className=\"mt-3 mb-0 text-muted text-sm\">\r\n                                                <span className=\"text-nowrap\">\r\n                                                    updated\r\n                                                </span>\r\n                                                <span className=\"text-info ml-2\">\r\n                                                    {stats.taskTodoModified !== 0 ? (\r\n                                                        moment(\r\n                                                            stats.taskTodoModified\r\n                                                        ).fromNow()\r\n                                                    ) : (\r\n                                                        <>Not enough data</>\r\n                                                    )}\r\n                                                </span>{' '}\r\n                                            </p>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        )}\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    tasks: []\r\n};\r\n\r\nHeader.propTypes = {\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    tasksLoading: PropTypes.bool.isRequired,\r\n    tasks: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            _id: PropTypes.string,\r\n            title: PropTypes.string,\r\n            description: PropTypes.string,\r\n            color: PropTypes.string,\r\n            category: PropTypes.string,\r\n            todos: PropTypes.any,\r\n            created: PropTypes.string,\r\n            modified: PropTypes.string\r\n        })\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    tasksLoading: state.tasks.isLoading,\r\n    tasks: state.tasks.tasks\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Header);\r\n","import React from 'react';\r\nimport { Card, CardBody, CardTitle, Badge, CardText, Button } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst TaskDisplayItem = (props) => {\r\n    const { id, title, description, color, category } = props;\r\n    return (\r\n        <Card inverse className={color}>\r\n            <CardBody>\r\n                <CardTitle>{title}</CardTitle>\r\n                {category !== '' ? (\r\n                    <Badge color=\"secondary\" className=\"text-default\">\r\n                        {category}\r\n                    </Badge>\r\n                ) : null}\r\n                <CardText>{description}</CardText>\r\n                <Button color=\"default\">\r\n                    <NavLink to={`/admin/task/${id}`}>View</NavLink>\r\n                </Button>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nTaskDisplayItem.defaultProps = {\r\n    category: ''\r\n};\r\n\r\nTaskDisplayItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired,\r\n    category: PropTypes.string\r\n};\r\n\r\nexport default TaskDisplayItem;\r\n","import React from 'react';\r\n\r\n// reactstrap components\r\nimport {\r\n    Container,\r\n    Row,\r\n    CardColumns,\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Button\r\n} from 'reactstrap';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Header from 'components/Headers/Header';\r\nimport TaskDisplayItem from './admin/Dashboard/TaskDisplayItem/TaskDisplayItem';\r\n\r\nclass Index extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        const { tasks } = this.props;\r\n        console.log(tasks.length);\r\n        return (\r\n            <>\r\n                <Header />\r\n                {/* Page content */}\r\n                <Container className=\"mt--7\" fluid>\r\n                    <Row className=\"mt-5 mx-2\">\r\n                        <CardColumns>\r\n                            {tasks.length !== 0\r\n                                ? tasks.map((task) => (\r\n                                      <TaskDisplayItem\r\n                                          // eslint-disable-next-line no-underscore-dangle\r\n                                          key={task._id}\r\n                                          // eslint-disable-next-line no-underscore-dangle\r\n                                          id={task._id}\r\n                                          title={task.title}\r\n                                          description={task.description}\r\n                                          color={task.color}\r\n                                          category={task.category}\r\n                                      />\r\n                                  ))\r\n                                : null}\r\n                        </CardColumns>\r\n                    </Row>\r\n                    {tasks.length !== 0 ? null : (\r\n                        <Row className=\"mt-3 mx-2 justify-content-center\">\r\n                            <Card className=\"bg-green\">\r\n                                <CardHeader>\r\n                                    <h5>Create a Task now</h5>\r\n                                </CardHeader>\r\n                                <CardBody className=\"justify-content-center\">\r\n                                    <Col className=\"pl-4\">\r\n                                        <NavLink to=\"/admin/tasks\">\r\n                                            <Button color=\"primary\">Go!</Button>\r\n                                        </NavLink>\r\n                                    </Col>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Row>\r\n                    )}\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nIndex.propTypes = {\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    tasks: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    tasks: state.tasks.tasks,\r\n    isLoading: state.tasks.isLoading\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(Index));\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Badge, Progress, Button, Modal } from 'reactstrap';\r\n\r\nconst calculateProgress = (todos) => {\r\n    let progress = 0;\r\n    let completed = 0;\r\n    todos.forEach((todo) => {\r\n        if (todo.completed) {\r\n            completed += 1;\r\n        }\r\n    });\r\n    progress = (completed / todos.length) * 100;\r\n    return progress;\r\n};\r\n\r\nconst TaskTableItem = (props) => {\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n\r\n    const toggle = () => setModalOpen(!modalOpen);\r\n\r\n    const { id, title, category, todos, onDelete } = props;\r\n    const progress = calculateProgress(todos);\r\n    return (\r\n        <>\r\n            <tr key={id}>\r\n                <th scope=\"row\">\r\n                    <NavLink to={`/admin/task/${id}`}>\r\n                        <h4>{title}</h4>\r\n                    </NavLink>\r\n                </th>\r\n                <td>\r\n                    <Badge color=\"primary\" className=\"text-default bg-\">\r\n                        {category}\r\n                    </Badge>\r\n                </td>\r\n                <td>\r\n                    {progress === 100 ? (\r\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\r\n                            <i className=\"bg-primary\" />\r\n                            completed\r\n                        </Badge>\r\n                    ) : (\r\n                        <Badge color=\"\" className=\"badge-dot mr-4\">\r\n                            <i className=\"bg-warning\" />\r\n                            pending\r\n                        </Badge>\r\n                    )}\r\n                </td>\r\n                <td>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <span className=\"mr-2\">{Number(progress.toFixed(2))}%</span>\r\n                        <div>\r\n                            <Progress\r\n                                max=\"100\"\r\n                                value={progress}\r\n                                barClassName=\"bg-primary\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <Button\r\n                        className=\"btn-icon btn-3\"\r\n                        id=\"deleteButton\"\r\n                        color=\"secondary\"\r\n                        type=\"button\"\r\n                        size=\"sm\"\r\n                        onClick={toggle}\r\n                    >\r\n                        <span className=\"btn-inner--icon\">\r\n                            <i className=\"ni ni-fat-remove\" />\r\n                        </span>\r\n                        <span className=\"btn-inner--text\">Remove</span>\r\n                    </Button>\r\n                    <Modal\r\n                        className=\"modal-dialog-centered modal-danger\"\r\n                        contentClassName=\"bg-gradient-danger\"\r\n                        isOpen={modalOpen}\r\n                        toggle={() => toggle('notificationModal')}\r\n                    >\r\n                        <div className=\"modal-header\">\r\n                            <h5\r\n                                className=\"modal-title\"\r\n                                id=\"modal-title-notification\"\r\n                            >\r\n                                Your attention is required!\r\n                            </h5>\r\n                            <button\r\n                                aria-label=\"Close\"\r\n                                className=\"close\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={() => toggle('notificationModal')}\r\n                            >\r\n                                <span aria-hidden>×</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"py-1 text-center\">\r\n                                <i className=\"fa fa-info-circle 3x\" />\r\n                                <h4 className=\"heading mt-4\">\r\n                                    Sure you want to delete this Task?\r\n                                </h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                className=\"btn-white\"\r\n                                color=\"default\"\r\n                                type=\"button\"\r\n                                onClick={() => onDelete(id)}\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                            <Button\r\n                                className=\"text-white ml-auto\"\r\n                                color=\"link\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={() => toggle('notificationModal')}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                        </div>\r\n                    </Modal>\r\n                </td>\r\n            </tr>\r\n        </>\r\n    );\r\n};\r\n\r\nTaskTableItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    category: PropTypes.string.isRequired,\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    todos: PropTypes.any.isRequired,\r\n    onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TaskTableItem;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Col,\r\n    Input,\r\n    FormFeedback,\r\n    Spinner\r\n} from 'reactstrap';\r\n\r\n// REDUX\r\nimport { createTask } from 'store/actions/taskActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass TaskForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            description: '',\r\n            color: 'bg-default',\r\n            category: '',\r\n            todos: [\r\n                {\r\n                    content: ''\r\n                }\r\n            ],\r\n            errors: {\r\n                title: false,\r\n                description: false,\r\n                todo: false\r\n            }\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        const { task, toggleModal } = this.props;\r\n        if (newProps.task !== task && !newProps.isLoading) {\r\n            this.clearState();\r\n            toggleModal();\r\n        }\r\n    }\r\n\r\n    clearState = () => {\r\n        this.setState({\r\n            title: '',\r\n            description: '',\r\n            color: 'bg-default',\r\n            category: '',\r\n            todos: [\r\n                {\r\n                    content: ''\r\n                }\r\n            ],\r\n            errors: {\r\n                title: false,\r\n                description: false,\r\n                todo: false\r\n            }\r\n        });\r\n    };\r\n\r\n    // Input change handler\r\n    inputChangeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    };\r\n\r\n    // Add todo handler\r\n    addTodo = (e) => {\r\n        e.preventDefault();\r\n        const { todos } = this.state;\r\n        const lastTodo = todos[todos.length - 1];\r\n        if (lastTodo.content !== '') {\r\n            todos.push({\r\n                content: ''\r\n            });\r\n            this.setState({\r\n                todos\r\n            });\r\n        }\r\n    };\r\n\r\n    // Todo item change handler\r\n    todoChangeHandler = (e) => {\r\n        const { todos } = this.state;\r\n        todos[e.target.id].content = e.target.value;\r\n        this.setState({\r\n            todos\r\n        });\r\n    };\r\n\r\n    // Error checking\r\n    checkErrors = () => {\r\n        const { title, description, todos, errors } = this.state;\r\n        const lastTodo = todos[todos.length - 1];\r\n        let updatedErrors = errors;\r\n        if (title === '') {\r\n            updatedErrors = {\r\n                ...updatedErrors,\r\n                title: true\r\n            };\r\n        } else {\r\n            updatedErrors = {\r\n                ...updatedErrors,\r\n                title: false\r\n            };\r\n        }\r\n        if (description === '') {\r\n            updatedErrors = {\r\n                ...updatedErrors,\r\n                description: true\r\n            };\r\n        } else {\r\n            updatedErrors = {\r\n                ...updatedErrors,\r\n                description: false\r\n            };\r\n        }\r\n        if (lastTodo.content === '') {\r\n            updatedErrors = {\r\n                ...updatedErrors,\r\n                todo: true\r\n            };\r\n        } else {\r\n            updatedErrors = {\r\n                ...updatedErrors,\r\n                todo: false\r\n            };\r\n        }\r\n        return updatedErrors;\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { title, description, todos, category, color } = this.state;\r\n        const { toggleModal } = this.props;\r\n        const lastTodo = todos[todos.length - 1];\r\n        const updatedErrors = this.checkErrors();\r\n        this.setState(\r\n            {\r\n                errors: updatedErrors\r\n            },\r\n            () => {\r\n                if (\r\n                    title !== '' &&\r\n                    description !== '' &&\r\n                    lastTodo.content !== '' &&\r\n                    !updatedErrors.title &&\r\n                    !updatedErrors.description &&\r\n                    !updatedErrors.todo\r\n                ) {\r\n                    const task = {\r\n                        title,\r\n                        description,\r\n                        color,\r\n                        category,\r\n                        todos\r\n                    };\r\n                    // eslint-disable-next-line react/destructuring-assignment\r\n                    this.props.createTask(task);\r\n                    toggleModal();\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { showModal, toggleModal, isLoading } = this.props;\r\n        const { title, description, category, color, todos, errors } = this.state;\r\n        const titleError = errors.title;\r\n        const descError = errors.description;\r\n        const todoError = errors.todo;\r\n        return (\r\n            <>\r\n                <Modal\r\n                    className=\"modal-dialog-centered\"\r\n                    isOpen={showModal}\r\n                    toggle={toggleModal}\r\n                >\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                            Create New task\r\n                        </h5>\r\n                        <button\r\n                            aria-label=\"Close\"\r\n                            className=\"close\"\r\n                            data-dismiss=\"modal\"\r\n                            type=\"button\"\r\n                            onClick={toggleModal}\r\n                        >\r\n                            <span aria-hidden>×</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        {isLoading ? (\r\n                            <Spinner style={{ width: '3rem', height: '3rem' }} />\r\n                        ) : (\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup row>\r\n                                    <Label for=\"title\" sm={3}>\r\n                                        Title*\r\n                                    </Label>\r\n                                    <Col sm={9}>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"title\"\r\n                                            id=\"title\"\r\n                                            value={title}\r\n                                            onChange={this.inputChangeHandler}\r\n                                            placeholder=\"Enter task title\"\r\n                                            invalid={titleError}\r\n                                        />\r\n                                        {titleError ? (\r\n                                            <FormFeedback>\r\n                                                This field is required!\r\n                                            </FormFeedback>\r\n                                        ) : null}\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"description\" sm={3}>\r\n                                        Description*\r\n                                    </Label>\r\n                                    <Col sm={9}>\r\n                                        <Input\r\n                                            type=\"textarea\"\r\n                                            name=\"text\"\r\n                                            id=\"description\"\r\n                                            value={description}\r\n                                            onChange={this.inputChangeHandler}\r\n                                            placeholder=\"Description\"\r\n                                            invalid={descError}\r\n                                        />\r\n                                        {descError ? (\r\n                                            <FormFeedback>\r\n                                                This field is required!\r\n                                            </FormFeedback>\r\n                                        ) : null}\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"category\" sm={3}>\r\n                                        category\r\n                                    </Label>\r\n                                    <Col sm={9}>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"category\"\r\n                                            id=\"category\"\r\n                                            value={category}\r\n                                            onChange={this.inputChangeHandler}\r\n                                            placeholder=\"Category\"\r\n                                        />\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"color\" sm={3}>\r\n                                        Color\r\n                                    </Label>\r\n                                    <Col sm={9}>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"color\"\r\n                                            id=\"color\"\r\n                                            value={color}\r\n                                            onChange={this.inputChangeHandler}\r\n                                        >\r\n                                            <option value=\"bg-default\">\r\n                                                Default\r\n                                            </option>\r\n                                            <option value=\"bg-info\">Info</option>\r\n                                            <option value=\"bg-warning\">\r\n                                                Warning\r\n                                            </option>\r\n                                            <option value=\"bg-success\">\r\n                                                Success\r\n                                            </option>\r\n                                            <option value=\"bg-danger\">Danger</option>\r\n                                            <option value=\"bg-orange\">Orange</option>\r\n                                            <option value=\"bg-green\">Green</option>\r\n                                            <option value=\"bg-yellow\">Yellow</option>\r\n                                            <option value=\"bg-blue\">Blue</option>\r\n                                            <option value=\"bg-gray\">Gray</option>\r\n                                            <option value=\"bg-dark\">Dark</option>\r\n                                        </Input>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                    <Label for=\"todos\" sm={3}>\r\n                                        Todos\r\n                                    </Label>\r\n                                    <Col sm={7}>\r\n                                        {todos.map((todo, index) => (\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                name=\"todos\"\r\n                                                id={index}\r\n                                                className=\"mb-2\"\r\n                                                placeholder=\"Todo\"\r\n                                                value={todo.content}\r\n                                                // eslint-disable-next-line react/no-array-index-key\r\n                                                key={index}\r\n                                                onChange={this.todoChangeHandler}\r\n                                                invalid={\r\n                                                    index === todos.length - 1 &&\r\n                                                    todoError\r\n                                                }\r\n                                            />\r\n                                        ))}\r\n                                        {todoError ? (\r\n                                            <FormFeedback>\r\n                                                This field is required!\r\n                                            </FormFeedback>\r\n                                        ) : null}\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            type=\"button\"\r\n                                            onClick={this.addTodo}\r\n                                        >\r\n                                            +\r\n                                        </Button>\r\n                                    </Col>\r\n                                </FormGroup>\r\n                            </Form>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <Button\r\n                            color=\"secondary\"\r\n                            data-dismiss=\"modal\"\r\n                            type=\"button\"\r\n                            onClick={toggleModal}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            type=\"button\"\r\n                            onClick={this.handleSubmit}\r\n                        >\r\n                            Save changes\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nTaskForm.defaultProps = {\r\n    task: {}\r\n};\r\n\r\nTaskForm.propTypes = {\r\n    showModal: PropTypes.bool.isRequired,\r\n    toggleModal: PropTypes.func.isRequired,\r\n    createTask: PropTypes.func.isRequired,\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    task: PropTypes.object,\r\n    isLoading: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    task: state.tasks.task,\r\n    isLoading: state.tasks.isLoading\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { createTask })(TaskForm));\r\n","import axios from 'axios';\r\n\r\nimport * as actionTypes from './actionTypes';\r\nimport { headerConfig } from './config';\r\n\r\n// CREATE A TASK\r\nexport const createTask = (task) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: actionTypes.TASK_CREATE_START\r\n    });\r\n    axios\r\n        .post('/api/tasks', task, headerConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: actionTypes.TASK_CREATE_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            let errors = null;\r\n            if (\r\n                Object.prototype.hasOwnProperty.call(error, 'response') &&\r\n                error.response !== undefined\r\n            ) {\r\n                errors = {\r\n                    msg: error.response\r\n                };\r\n            } else {\r\n                errors = {\r\n                    msg: 'Service unavailable',\r\n                    status: 503\r\n                };\r\n            }\r\n            dispatch({\r\n                type: actionTypes.TASK_CREATE_FAIL\r\n            });\r\n            dispatch({\r\n                type: actionTypes.SHOW_ERROR,\r\n                payload: errors\r\n            });\r\n        });\r\n};\r\n\r\n// READ ALL TASKS\r\nexport const fetchAllTasks = () => (dispatch, getState) => {\r\n    dispatch({\r\n        type: actionTypes.TASKS_READ_START\r\n    });\r\n    axios\r\n        .get('/api/tasks', headerConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: actionTypes.TASKS_READ_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            let errors = null;\r\n            if (\r\n                Object.prototype.hasOwnProperty.call(error, 'response') &&\r\n                error.response !== undefined\r\n            ) {\r\n                errors = {\r\n                    msg: error.response\r\n                };\r\n            } else {\r\n                errors = {\r\n                    msg: 'Service unavailable',\r\n                    status: 503\r\n                };\r\n            }\r\n            dispatch({\r\n                type: actionTypes.TASKS_READ_FAIL\r\n            });\r\n            dispatch({\r\n                type: actionTypes.SHOW_ERROR,\r\n                payload: errors\r\n            });\r\n        });\r\n};\r\n\r\n// READ A TASK\r\nexport const fetchTaskById = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: actionTypes.TASK_READ_START\r\n    });\r\n    axios\r\n        .get(`/api/tasks/${id}`, headerConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: actionTypes.TASK_READ_SUCCESS,\r\n                payload: res.data.result\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            let errors = null;\r\n            if (\r\n                Object.prototype.hasOwnProperty.call(error, 'response') &&\r\n                error.response !== undefined\r\n            ) {\r\n                errors = {\r\n                    msg: error.response\r\n                };\r\n            } else {\r\n                errors = {\r\n                    msg: 'Service unavailable',\r\n                    status: 503\r\n                };\r\n            }\r\n            dispatch({\r\n                type: actionTypes.TASK_READ_FAIL\r\n            });\r\n            dispatch({\r\n                type: actionTypes.SHOW_ERROR,\r\n                payload: errors\r\n            });\r\n        });\r\n};\r\n\r\n// UPDATE A TASK\r\nexport const updateTask = (task) => (dispatch, getState) => {\r\n    const { _id } = task;\r\n    const id = _id;\r\n    dispatch({\r\n        type: actionTypes.TASK_UPDATE_START\r\n    });\r\n    axios\r\n        .patch(`/api/tasks/${id}`, task, headerConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: actionTypes.TASK_UPDATE_SUCCESS,\r\n                payload: res.data.result\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            let errors = null;\r\n            if (\r\n                Object.prototype.hasOwnProperty.call(error, 'response') &&\r\n                error.response !== undefined\r\n            ) {\r\n                errors = {\r\n                    msg: error.response\r\n                };\r\n            } else {\r\n                errors = {\r\n                    msg: 'Service unavailable',\r\n                    status: 503\r\n                };\r\n            }\r\n            dispatch({\r\n                type: actionTypes.TASK_UPDATE_FAIL\r\n            });\r\n            dispatch({\r\n                type: actionTypes.SHOW_ERROR,\r\n                payload: errors\r\n            });\r\n        });\r\n};\r\n\r\n// DELETE A TASK\r\nexport const deleteTask = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: actionTypes.TASK_DELETE_START\r\n    });\r\n    axios\r\n        .delete(`/api/tasks/${id}`, headerConfig(getState))\r\n        .then((res) => {\r\n            dispatch({\r\n                type: actionTypes.TASK_DELETE_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            let errors = null;\r\n            if (\r\n                Object.prototype.hasOwnProperty.call(error, 'response') &&\r\n                error.response !== undefined\r\n            ) {\r\n                errors = {\r\n                    msg: error.response\r\n                };\r\n            } else {\r\n                errors = {\r\n                    msg: 'Service unavailable',\r\n                    status: 503\r\n                };\r\n            }\r\n            dispatch({\r\n                type: actionTypes.TASK_DELETE_FAIL\r\n            });\r\n            dispatch({\r\n                type: actionTypes.SHOW_ERROR,\r\n                payload: errors\r\n            });\r\n        });\r\n};\r\n\r\n// CLEAR A TASK\r\nexport const clearTask = () => (dispatch) => {\r\n    dispatch({\r\n        type: actionTypes.TASK_CLEAR\r\n    });\r\n};\r\n\r\n// CLEAR TASKS\r\nexport const clearTasks = () => (dispatch) => {\r\n    dispatch({\r\n        type: actionTypes.TASKS_CLEAR\r\n    });\r\n};\r\n","/* eslint-disable global-require */\r\n/* eslint-disable react/prefer-stateless-function */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// reactstrap components\r\nimport { Card, CardHeader, Table, Container, Row, Button } from 'reactstrap';\r\n\r\n// core components\r\nimport Header from 'components/Headers/Header';\r\n\r\n// REDUX\r\nimport { connect } from 'react-redux';\r\nimport { deleteTask } from 'store/actions/taskActions';\r\n\r\nimport TaskTableItem from './TaskTableItem';\r\nimport TaskForm from './TaskForm';\r\n\r\nclass Tasks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false\r\n        };\r\n    }\r\n\r\n    toggleModal = () => {\r\n        const { showModal } = this.state;\r\n        this.setState({\r\n            showModal: !showModal\r\n        });\r\n    };\r\n\r\n    handletaskDelete = (taskId) => {\r\n        // eslint-disable-next-line react/destructuring-assignment\r\n        this.props.deleteTask(taskId);\r\n    };\r\n\r\n    render() {\r\n        const { showModal } = this.state;\r\n        const { tasks, isLoading } = this.props;\r\n        if (isLoading) {\r\n            return <div>Loading...</div>;\r\n        }\r\n        return (\r\n            <>\r\n                <Header />\r\n                {/* Page content */}\r\n                <Container className=\"mt--7\" fluid>\r\n                    {/* Table */}\r\n                    <Row>\r\n                        <div className=\"col\">\r\n                            <Card className=\"shadow\">\r\n                                <CardHeader className=\"border-0\">\r\n                                    <h3 className=\"mb-0\">Your Tasks</h3>\r\n                                    <Button\r\n                                        className=\"btn-icon btn-3 mt-2\"\r\n                                        color=\"primary\"\r\n                                        type=\"button\"\r\n                                        onClick={this.toggleModal}\r\n                                    >\r\n                                        <span className=\"btn-inner--icon\">+</span>\r\n                                        <span className=\"btn-inner--text\">\r\n                                            Add New Task\r\n                                        </span>\r\n                                    </Button>\r\n                                </CardHeader>\r\n                                <TaskForm\r\n                                    showModal={showModal}\r\n                                    toggleModal={this.toggleModal}\r\n                                />\r\n                                <Table\r\n                                    className=\"align-items-center table-flush\"\r\n                                    responsive\r\n                                >\r\n                                    <thead className=\"thead-light\">\r\n                                        <tr>\r\n                                            <th scope=\"col\">Task Name</th>\r\n                                            <th scope=\"col\">Category</th>\r\n                                            <th scope=\"col\">Status</th>\r\n                                            <th scope=\"col\">Completion</th>\r\n                                            <th scope=\"col\" />\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {tasks.map((task) => {\r\n                                            const {\r\n                                                _id,\r\n                                                title,\r\n                                                category,\r\n                                                todos\r\n                                            } = task;\r\n                                            return (\r\n                                                <TaskTableItem\r\n                                                    key={_id}\r\n                                                    id={_id}\r\n                                                    title={title}\r\n                                                    category={category}\r\n                                                    todos={todos}\r\n                                                    onDelete={this.handletaskDelete}\r\n                                                />\r\n                                            );\r\n                                        })}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Card>\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nTasks.propTypes = {\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    tasks: PropTypes.array.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n    deleteTask: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    tasks: state.tasks.tasks,\r\n    isLoading: state.tasks.isLoading\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteTask })(Tasks);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Container,\r\n    Row,\r\n    CardHeader,\r\n    Card,\r\n    CardBody,\r\n    CardTitle,\r\n    CardText,\r\n    Button,\r\n    CardFooter,\r\n    Badge,\r\n    Input,\r\n    Col,\r\n    Form\r\n} from 'reactstrap';\r\nimport Header from 'components/Headers/Header';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport { fetchTaskById, updateTask, clearTask } from 'store/actions/taskActions';\r\n\r\nclass Task extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            description: '',\r\n            color: '',\r\n            category: '',\r\n            todos: [\r\n                {\r\n                    content: '',\r\n                    completed: false\r\n                }\r\n            ],\r\n            created: undefined,\r\n            modified: undefined,\r\n            loaded: false,\r\n            edit: {\r\n                title: false,\r\n                description: false,\r\n                color: false\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { isLoading, task, location } = this.props;\r\n        const taskId = location.pathname.split('/')[3];\r\n        if (\r\n            !isLoading &&\r\n            taskId.length > 20 &&\r\n            !Object.prototype.hasOwnProperty.call(task, 'title')\r\n        ) {\r\n            // eslint-disable-next-line react/destructuring-assignment\r\n            this.props.fetchTaskById(taskId);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // eslint-disable-next-line react/destructuring-assignment\r\n        this.props.clearTask();\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        const { isLoading, task } = nextProps;\r\n        if (\r\n            !isLoading &&\r\n            Object.prototype.hasOwnProperty.call(task, 'created') &&\r\n            task.created !== prevState.created\r\n        ) {\r\n            return { ...task, loaded: true };\r\n        }\r\n        return prevState;\r\n    }\r\n\r\n    todoStateChangeHandler = (index) => {\r\n        const { todos } = this.state;\r\n        const prevState = todos[index].completed;\r\n        todos[index].completed = !prevState;\r\n        this.setState({\r\n            todos\r\n        });\r\n    };\r\n\r\n    updateHandler = (e) => {\r\n        e.preventDefault();\r\n        const { title, description, color, todos, category, created } = this.state;\r\n        const { task } = this.props;\r\n        const updatedTask = {\r\n            // eslint-disable-next-line no-underscore-dangle\r\n            _id: task._id,\r\n            title,\r\n            description,\r\n            color,\r\n            todos,\r\n            category,\r\n            created\r\n        };\r\n        // eslint-disable-next-line react/destructuring-assignment\r\n        this.props.updateTask(updatedTask);\r\n    };\r\n\r\n    handleUpdateContent = (element) => {\r\n        const { edit } = this.state;\r\n        const prevState = edit[element];\r\n        edit[element] = !prevState;\r\n        this.setState({\r\n            edit\r\n        });\r\n    };\r\n\r\n    onChangeHandler = (e, element) => {\r\n        e.preventDefault();\r\n        const nextState = this.state;\r\n        nextState[element] = e.target.value;\r\n        this.setState({\r\n            ...nextState\r\n        });\r\n    };\r\n\r\n    onEditStateChangeHandler = (e, element) => {\r\n        e.preventDefault();\r\n        const { edit } = this.state;\r\n        const nextEditState = !edit[element];\r\n        this.setState({\r\n            edit: {\r\n                ...edit,\r\n                [element]: nextEditState\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { isLoading } = this.props;\r\n        const {\r\n            title,\r\n            description,\r\n            color,\r\n            category,\r\n            todos,\r\n            created,\r\n            modified,\r\n            loaded,\r\n            edit\r\n        } = this.state;\r\n        if (isLoading) {\r\n            return <div>Loading...</div>;\r\n        }\r\n        return (\r\n            <>\r\n                <Header />\r\n                {/* Page content */}\r\n                <Container className=\"mt--7\" fluid>\r\n                    {/* Table */}\r\n                    <Row>\r\n                        <div className=\"col\">\r\n                            {loaded ? (\r\n                                <Card inverse className={color}>\r\n                                    <CardHeader className=\"bg-default\">\r\n                                        <Row>\r\n                                            <Col xl={1} md={3} sm={2}>\r\n                                                <div className=\"py-2\">Task :</div>\r\n                                            </Col>\r\n                                            <Col md={9}>\r\n                                                {edit.title ? (\r\n                                                    <Form\r\n                                                        onSubmit={(e) =>\r\n                                                            this.onEditStateChangeHandler(\r\n                                                                e,\r\n                                                                'title'\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        <Input\r\n                                                            id=\"title\"\r\n                                                            placeholder={title}\r\n                                                            type=\"text\"\r\n                                                            value={title}\r\n                                                            onChange={(e) =>\r\n                                                                this.onChangeHandler(\r\n                                                                    e,\r\n                                                                    'title'\r\n                                                                )\r\n                                                            }\r\n                                                        />\r\n                                                    </Form>\r\n                                                ) : (\r\n                                                    <Button\r\n                                                        color=\"link\"\r\n                                                        className=\"text-secondary px-0\"\r\n                                                        onClick={() =>\r\n                                                            this.handleUpdateContent(\r\n                                                                'title'\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        {title}\r\n                                                    </Button>\r\n                                                )}\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <br />\r\n                                        <small>\r\n                                            Created :{' '}\r\n                                            {moment(created).format(\r\n                                                'dddd, MMMM Do YYYY, h:mm:ss a'\r\n                                            )}\r\n                                        </small>\r\n                                    </CardHeader>\r\n                                    <CardBody>\r\n                                        <Badge\r\n                                            color=\"secondary\"\r\n                                            className=\"text-default\"\r\n                                        >\r\n                                            {category}\r\n                                        </Badge>\r\n                                        <CardTitle className=\"mt-2\">\r\n                                            {edit.description ? (\r\n                                                <Form\r\n                                                    onSubmit={(e) =>\r\n                                                        this.onEditStateChangeHandler(\r\n                                                            e,\r\n                                                            'description'\r\n                                                        )\r\n                                                    }\r\n                                                >\r\n                                                    <Input\r\n                                                        id=\"description\"\r\n                                                        className=\"text-default\"\r\n                                                        placeholder={description}\r\n                                                        type=\"text\"\r\n                                                        value={description}\r\n                                                        onChange={(e) =>\r\n                                                            this.onChangeHandler(\r\n                                                                e,\r\n                                                                'description'\r\n                                                            )\r\n                                                        }\r\n                                                    />\r\n                                                </Form>\r\n                                            ) : (\r\n                                                <Button\r\n                                                    color=\"link\"\r\n                                                    className=\"text-white px-0\"\r\n                                                    onClick={() =>\r\n                                                        this.handleUpdateContent(\r\n                                                            'description'\r\n                                                        )\r\n                                                    }\r\n                                                >\r\n                                                    {description}\r\n                                                </Button>\r\n                                            )}\r\n                                        </CardTitle>\r\n                                        <CardText>Things to do:</CardText>\r\n                                        <div className=\"ml-3\">\r\n                                            {todos.map((todo, index) => (\r\n                                                <div\r\n                                                    key={todo.content}\r\n                                                    className=\"custom-control custom-checkbox mb-3\"\r\n                                                >\r\n                                                    <input\r\n                                                        className=\"custom-control-input\"\r\n                                                        defaultChecked={\r\n                                                            todo.completed\r\n                                                        }\r\n                                                        id={`todoitem-${index}`}\r\n                                                        type=\"checkbox\"\r\n                                                        value={todo.completed}\r\n                                                        onChange={this.todoStateChangeHandler.bind(\r\n                                                            this,\r\n                                                            index\r\n                                                        )}\r\n                                                    />\r\n                                                    <label\r\n                                                        className=\"custom-control-label\"\r\n                                                        htmlFor={`todoitem-${index}`}\r\n                                                    >\r\n                                                        {todo.content}\r\n                                                    </label>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </CardBody>\r\n                                    <CardFooter className={color}>\r\n                                        <div className=\"justify-content-left\">\r\n                                            <span>\r\n                                                Last modified:{' '}\r\n                                                {moment(modified).fromNow()}\r\n                                            </span>\r\n                                            <Button\r\n                                                className=\"ml-4\"\r\n                                                size=\"sm\"\r\n                                                onClick={this.updateHandler}\r\n                                            >\r\n                                                Update\r\n                                            </Button>\r\n                                        </div>\r\n                                    </CardFooter>\r\n                                </Card>\r\n                            ) : (\r\n                                <Card>\r\n                                    <CardBody>Unavailable!</CardBody>\r\n                                </Card>\r\n                            )}\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nTask.propTypes = {\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    task: PropTypes.object.isRequired,\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    location: PropTypes.object.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n    fetchTaskById: PropTypes.func.isRequired,\r\n    updateTask: PropTypes.func.isRequired,\r\n    clearTask: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    task: state.tasks.task,\r\n    isLoading: state.tasks.isLoading\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    fetchTaskById,\r\n    updateTask,\r\n    clearTask\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Task);\r\n","/* eslint-disable react/no-unescaped-entities */\r\n\r\nimport React from 'react';\r\n// reactstrap components\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst UserHeader = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\">\r\n                {/* Mask */}\r\n                <span className=\"mask bg-gradient-primary opacity-5\" />\r\n                {/* Header container */}\r\n                <Container className=\"d-flex align-items-center\" fluid>\r\n                    <Row>\r\n                        <Col lg=\"7\" md=\"10\">\r\n                            <p className=\"text-white mt-3 mb-4\">\r\n                                This is your profile page. You can see your profile\r\n                                info and you can update your email.\r\n                            </p>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserHeader;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Container,\r\n    Row,\r\n    Col\r\n} from 'reactstrap';\r\n// core components\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { updateUser } from 'store/actions/authActions';\r\nimport UserHeader from 'components/Headers/UserHeader';\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: ''\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        const { user } = nextProps;\r\n        if (Object.prototype.hasOwnProperty.call(user, 'email')) {\r\n            const { email: emailProp } = user;\r\n            const { email } = prevState;\r\n            if (email === '' && emailProp !== '') {\r\n                return {\r\n                    email: emailProp\r\n                };\r\n            }\r\n        }\r\n        return prevState;\r\n    }\r\n\r\n    inputChangeHandler = (e) => {\r\n        e.preventDefault();\r\n        if (Object.prototype.hasOwnProperty.call(e.target, 'value')) {\r\n            this.setState({\r\n                email: e.target.value\r\n            });\r\n        }\r\n    };\r\n\r\n    hanldeSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { email } = this.state;\r\n        if (email !== '') {\r\n            // eslint-disable-next-line react/destructuring-assignment\r\n            this.props.updateUser(this.state);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { user, isLoading } = this.props;\r\n        const { email } = this.state;\r\n        const {\r\n            _id: id,\r\n            firstName,\r\n            lastName,\r\n            userName,\r\n            tasks,\r\n            created,\r\n            modified\r\n        } = user;\r\n        return (\r\n            <>\r\n                <UserHeader />\r\n                {/* Page content */}\r\n                <Container className=\"mt--7\" fluid>\r\n                    <Row>\r\n                        <Col className=\"order-xl-1 mb-5 mb-xl-0\" xl=\"4\">\r\n                            <Card className=\"card-profile shadow\">\r\n                                <CardHeader className=\"text-center border-0 pt-8 pt-md-4 pb-0\">\r\n                                    <div className=\"mt-3\">\r\n                                        <h1>\r\n                                            <i\r\n                                                className=\"ni ni-circle-08\"\r\n                                                style={{ fontSize: 'xxx-large' }}\r\n                                            />\r\n                                        </h1>\r\n                                    </div>\r\n                                </CardHeader>\r\n                                <CardBody className=\"pt-0 pt-md-4\">\r\n                                    <div className=\"text-center\">\r\n                                        <h3>\r\n                                            {!isLoading &&\r\n                                            Object.prototype.hasOwnProperty.call(\r\n                                                user,\r\n                                                'firstName'\r\n                                            ) &&\r\n                                            Object.prototype.hasOwnProperty.call(\r\n                                                user,\r\n                                                'lastName'\r\n                                            ) ? (\r\n                                                <>{`${firstName} ${lastName}`}</>\r\n                                            ) : null}\r\n                                        </h3>\r\n                                        <div className=\"h5 font-weight-300\">\r\n                                            <i className=\"ni location_pin mr-2\" />\r\n                                            {!isLoading &&\r\n                                            Object.prototype.hasOwnProperty.call(\r\n                                                user,\r\n                                                'userName'\r\n                                            ) &&\r\n                                            Object.prototype.hasOwnProperty.call(\r\n                                                user,\r\n                                                '_id'\r\n                                            ) ? (\r\n                                                <>{`${userName} (${id})`}</>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <div>\r\n                                            <i className=\"ni education_hat mr-2\" />\r\n                                            {!isLoading &&\r\n                                            Object.prototype.hasOwnProperty.call(\r\n                                                user,\r\n                                                'email'\r\n                                            ) ? (\r\n                                                <>{email}</>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <hr className=\"my-4\" />\r\n                                        <div className=\"text-left\">\r\n                                            <div className=\"h5 mt-4\">\r\n                                                <i className=\"ni business_briefcase-24 mr-2\" />\r\n                                                Created -{' '}\r\n                                                {!isLoading &&\r\n                                                Object.prototype.hasOwnProperty.call(\r\n                                                    user,\r\n                                                    'created'\r\n                                                ) ? (\r\n                                                    <>\r\n                                                        {moment(created).format(\r\n                                                            'MMMM Do YYYY, h:mm:ss a'\r\n                                                        )}\r\n                                                    </>\r\n                                                ) : null}\r\n                                            </div>\r\n                                            <div className=\"h5 mt-4\">\r\n                                                <i className=\"ni business_briefcase-24 mr-2\" />\r\n                                                Last Updated -{' '}\r\n                                                {!isLoading &&\r\n                                                Object.prototype.hasOwnProperty.call(\r\n                                                    user,\r\n                                                    'modified'\r\n                                                ) ? (\r\n                                                    <>{moment(modified).fromNow()}</>\r\n                                                ) : null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Row>\r\n                                        <div className=\"col\">\r\n                                            <div className=\"card-profile-stats d-flex justify-content-center mt-md-2\">\r\n                                                <div>\r\n                                                    <span className=\"heading\">\r\n                                                        {!isLoading &&\r\n                                                        Object.prototype.hasOwnProperty.call(\r\n                                                            user,\r\n                                                            'tasks'\r\n                                                        ) ? (\r\n                                                            <>{tasks.length}</>\r\n                                                        ) : null}\r\n                                                    </span>\r\n                                                    <span className=\"description\">\r\n                                                        Tasks\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Row>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col className=\"order-xl-2\" xl=\"8\">\r\n                            <Card className=\"bg-secondary shadow\">\r\n                                <CardHeader className=\"bg-white border-0\">\r\n                                    <Row className=\"align-items-center\">\r\n                                        <Col xs=\"8\">\r\n                                            <h3 className=\"mb-0\">My account</h3>\r\n                                        </Col>\r\n                                        <Col className=\"text-right\" xs=\"4\">\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                href=\"#pablo\"\r\n                                                onClick={this.hanldeSubmit}\r\n                                                size=\"sm\"\r\n                                            >\r\n                                                Update\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Form onSubmit={this.hanldeSubmit}>\r\n                                        <h6 className=\"heading-small text-muted mb-4\">\r\n                                            Update email address\r\n                                        </h6>\r\n                                        <div className=\"pl-lg-4\">\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <FormGroup>\r\n                                                        <label\r\n                                                            className=\"form-control-label\"\r\n                                                            htmlFor=\"email\"\r\n                                                        >\r\n                                                            Email address\r\n                                                        </label>\r\n                                                        <Input\r\n                                                            className=\"form-control-alternative\"\r\n                                                            id=\"email\"\r\n                                                            placeholder=\"Email\"\r\n                                                            type=\"email\"\r\n                                                            value={email}\r\n                                                            onChange={\r\n                                                                this\r\n                                                                    .inputChangeHandler\r\n                                                            }\r\n                                                        />\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </div>\r\n                                    </Form>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nProfile.propTypes = {\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    user: PropTypes.object.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n    updateUser: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.user,\r\n    isLoading: state.auth.isLoading\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, { updateUser })(Profile));\r\n","import Login from 'views/auth/Login';\r\nimport Register from 'views/auth/Register';\r\nimport Index from 'views/Index';\r\nimport Tasks from 'views/admin/Tasks/Tasks';\r\nimport Task from 'views/admin/Task/Task';\r\nimport Profile from 'views/admin/Profile/Profile';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/index',\r\n        name: 'Dashboard',\r\n        icon: 'ni ni-app text-green',\r\n        component: Index,\r\n        hideInSidebar: false,\r\n        layout: '/admin'\r\n    },\r\n    {\r\n        path: '/tasks',\r\n        name: 'Tasks',\r\n        icon: 'ni ni-bullet-list-67 text-yellow',\r\n        component: Tasks,\r\n        hideInSidebar: false,\r\n        layout: '/admin'\r\n    },\r\n    {\r\n        path: '/task/',\r\n        name: 'Task',\r\n        component: Task,\r\n        hideInSidebar: true,\r\n        layout: '/admin'\r\n    },\r\n    {\r\n        path: '/user-profile',\r\n        name: 'User Profile',\r\n        icon: 'ni ni-single-02 text-orange',\r\n        component: Profile,\r\n        hideInSidebar: false,\r\n        layout: '/admin'\r\n    },\r\n    {\r\n        path: '/login',\r\n        name: 'Login',\r\n        icon: 'ni ni-key-25 text-info',\r\n        component: Login,\r\n        hideInSidebar: true,\r\n        layout: '/auth'\r\n    },\r\n    {\r\n        path: '/register',\r\n        name: 'Register',\r\n        icon: 'ni ni-circle-08 text-pink',\r\n        component: Register,\r\n        hideInSidebar: true,\r\n        layout: '/auth'\r\n    }\r\n];\r\nexport default routes;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n// reactstrap components\r\nimport {\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    Navbar,\r\n    Nav,\r\n    Container,\r\n    Media\r\n} from 'reactstrap';\r\n\r\n// REDUX\r\nimport { connect } from 'react-redux';\r\nimport { logout } from 'store/actions/authActions';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst AdminNavbar = (props) => {\r\n    const { brandText, user, isLoading } = props;\r\n    return (\r\n        <>\r\n            <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\r\n                <Container fluid>\r\n                    <Link\r\n                        className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\r\n                        to=\"/\"\r\n                    >\r\n                        {brandText}\r\n                    </Link>\r\n                    {isLoading ? null : (\r\n                        <Nav className=\"align-items-center d-none d-md-flex\" navbar>\r\n                            <UncontrolledDropdown nav>\r\n                                <DropdownToggle className=\"pr-0\" nav>\r\n                                    <Media className=\"align-items-center\">\r\n                                        <span className=\"avatar avatar-sm rounded-circle\">\r\n                                            <i className=\"ni ni-single-02\" />\r\n                                        </span>\r\n                                        <Media className=\"ml-2 d-none d-lg-block\">\r\n                                            <span className=\"mb-0 text-sm font-weight-bold\">\r\n                                                {user.userName}\r\n                                            </span>\r\n                                        </Media>\r\n                                    </Media>\r\n                                </DropdownToggle>\r\n                                <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                                    <DropdownItem\r\n                                        className=\"noti-title\"\r\n                                        header\r\n                                        tag=\"div\"\r\n                                    >\r\n                                        <h6 className=\"text-overflow m-0\">\r\n                                            Welcome! {user.userName}\r\n                                        </h6>\r\n                                    </DropdownItem>\r\n                                    <DropdownItem\r\n                                        to=\"/admin/user-profile\"\r\n                                        tag={Link}\r\n                                    >\r\n                                        <i className=\"ni ni-single-02\" />\r\n                                        <span>My profile</span>\r\n                                    </DropdownItem>\r\n                                    <DropdownItem to=\"/admin/tasks\" tag={Link}>\r\n                                        <i className=\"ni ni-bullet-list-67\" />\r\n                                        <span>My Tasks</span>\r\n                                    </DropdownItem>\r\n                                    <DropdownItem divider />\r\n                                    <DropdownItem\r\n                                        href=\"#pablo\"\r\n                                        onClick={() => props.logout()}\r\n                                    >\r\n                                        <i className=\"ni ni-curved-next\" />\r\n                                        <span>Logout</span>\r\n                                    </DropdownItem>\r\n                                </DropdownMenu>\r\n                            </UncontrolledDropdown>\r\n                        </Nav>\r\n                    )}\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    );\r\n};\r\n\r\nAdminNavbar.propTypes = {\r\n    brandText: PropTypes.string.isRequired,\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    user: PropTypes.object.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n    logout: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.user,\r\n    isLoading: state.auth.isLoading\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(AdminNavbar);\r\n","/*eslint-disable*/\r\nimport React from 'react';\r\n\r\n// reactstrap components\r\nimport { Container, Row, Col, Nav, NavItem, NavLink } from 'reactstrap';\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"footer\">\r\n                <Row className=\"align-items-center justify-content-xl-between\">\r\n                    <Col xl=\"6\">\r\n                        <div className=\"copyright text-center text-xl-left text-muted\">\r\n                            © 2020{' '}\r\n                            <a\r\n                                className=\"font-weight-bold ml-1\"\r\n                                href=\"/\"\r\n                                rel=\"noopener noreferrer\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                Task<span className=\"text-info\">Berry</span>\r\n                            </a>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col xl=\"6\">\r\n                        <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"/\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                    target=\"_blank\"\r\n                                >\r\n                                    TaskBerry\r\n                                </NavLink>\r\n                            </NavItem>\r\n\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"/\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                    target=\"_blank\"\r\n                                >\r\n                                    About Us\r\n                                </NavLink>\r\n                            </NavItem>\r\n\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    href=\"/\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                    target=\"_blank\"\r\n                                >\r\n                                    Blog\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Col>\r\n                </Row>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","/*eslint-disable*/\r\nimport React from 'react';\r\nimport { NavLink as NavLinkRRD, Link } from 'react-router-dom';\r\n// nodejs library to set properties for components\r\nimport { PropTypes } from 'prop-types';\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Collapse,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Media,\r\n    NavbarBrand,\r\n    Navbar,\r\n    NavItem,\r\n    NavLink,\r\n    Nav,\r\n    Progress,\r\n    Table,\r\n    Container,\r\n    Row,\r\n    Col\r\n} from 'reactstrap';\r\n\r\nvar ps;\r\n\r\nclass Sidebar extends React.Component {\r\n    state = {\r\n        collapseOpen: false\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.activeRoute.bind(this);\r\n    }\r\n    // verifies if routeName is the one active (in browser input)\r\n    activeRoute(routeName) {\r\n        return this.props.location.pathname.indexOf(routeName) > -1 ? 'active' : '';\r\n    }\r\n    // toggles collapse between opened and closed (true/false)\r\n    toggleCollapse = () => {\r\n        this.setState({\r\n            collapseOpen: !this.state.collapseOpen\r\n        });\r\n    };\r\n    // closes the collapse\r\n    closeCollapse = () => {\r\n        this.setState({\r\n            collapseOpen: false\r\n        });\r\n    };\r\n    // creates the links that appear in the left menu / Sidebar\r\n    createLinks = (routes) => {\r\n        return routes.map((prop, key) => {\r\n            if (prop.hideInSidebar) {\r\n                return null;\r\n            }\r\n            return (\r\n                <NavItem key={key}>\r\n                    <NavLink\r\n                        to={prop.layout + prop.path}\r\n                        tag={NavLinkRRD}\r\n                        onClick={this.closeCollapse}\r\n                        activeClassName=\"active\"\r\n                    >\r\n                        <i className={prop.icon} />\r\n                        {prop.name}\r\n                    </NavLink>\r\n                </NavItem>\r\n            );\r\n        });\r\n    };\r\n    render() {\r\n        const { bgColor, routes, logo } = this.props;\r\n        let navbarBrandProps;\r\n        if (logo && logo.innerLink) {\r\n            navbarBrandProps = {\r\n                to: logo.innerLink,\r\n                tag: Link\r\n            };\r\n        } else if (logo && logo.outterLink) {\r\n            navbarBrandProps = {\r\n                href: logo.outterLink,\r\n                target: '_blank'\r\n            };\r\n        }\r\n        return (\r\n            <Navbar\r\n                className=\"navbar-vertical fixed-left navbar-light bg-white\"\r\n                expand=\"md\"\r\n                id=\"sidenav-main\"\r\n            >\r\n                <Container fluid>\r\n                    {/* Toggler */}\r\n                    <button\r\n                        className=\"navbar-toggler\"\r\n                        type=\"button\"\r\n                        onClick={this.toggleCollapse}\r\n                    >\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n                    {/* Brand */}\r\n                    {logo ? (\r\n                        <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\r\n                            <h1>\r\n                                Task<span className=\"text-info\">Berry</span>\r\n                            </h1>\r\n                        </NavbarBrand>\r\n                    ) : null}\r\n                    {/* User */}\r\n                    <Nav className=\"align-items-center d-md-none\">\r\n                        <UncontrolledDropdown nav>\r\n                            <DropdownToggle nav className=\"nav-link-icon\">\r\n                                <i className=\"ni ni-bell-55\" />\r\n                            </DropdownToggle>\r\n                            <DropdownMenu\r\n                                aria-labelledby=\"navbar-default_dropdown_1\"\r\n                                className=\"dropdown-menu-arrow\"\r\n                                right\r\n                            >\r\n                                <DropdownItem>Action</DropdownItem>\r\n                                <DropdownItem>Another action</DropdownItem>\r\n                                <DropdownItem divider />\r\n                                <DropdownItem>Something else here</DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                        <UncontrolledDropdown nav>\r\n                            <DropdownToggle nav>\r\n                                <Media className=\"align-items-center\">\r\n                                    <span className=\"avatar avatar-sm rounded-circle\">\r\n                                        <img\r\n                                            alt=\"...\"\r\n                                            src={require('assets/img/theme/team-1-800x800.jpg')}\r\n                                        />\r\n                                    </span>\r\n                                </Media>\r\n                            </DropdownToggle>\r\n                            <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                                <DropdownItem\r\n                                    className=\"noti-title\"\r\n                                    header\r\n                                    tag=\"div\"\r\n                                >\r\n                                    <h6 className=\"text-overflow m-0\">Welcome!</h6>\r\n                                </DropdownItem>\r\n                                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                                    <i className=\"ni ni-single-02\" />\r\n                                    <span>My profile</span>\r\n                                </DropdownItem>\r\n                                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                                    <i className=\"ni ni-settings-gear-65\" />\r\n                                    <span>Settings</span>\r\n                                </DropdownItem>\r\n                                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                                    <i className=\"ni ni-calendar-grid-58\" />\r\n                                    <span>Activity</span>\r\n                                </DropdownItem>\r\n                                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\r\n                                    <i className=\"ni ni-support-16\" />\r\n                                    <span>Support</span>\r\n                                </DropdownItem>\r\n                                <DropdownItem divider />\r\n                                <DropdownItem\r\n                                    href=\"#pablo\"\r\n                                    onClick={(e) => e.preventDefault()}\r\n                                >\r\n                                    <i className=\"ni ni-user-run\" />\r\n                                    <span>Logout</span>\r\n                                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </Nav>\r\n                    {/* Collapse */}\r\n                    <Collapse navbar isOpen={this.state.collapseOpen}>\r\n                        {/* Collapse header */}\r\n                        <div className=\"navbar-collapse-header d-md-none\">\r\n                            <Row>\r\n                                {logo ? (\r\n                                    <Col className=\"collapse-brand\" xs=\"6\">\r\n                                        {logo.innerLink ? (\r\n                                            <Link to={logo.innerLink}>\r\n                                                <h1>\r\n                                                    Task\r\n                                                    <span className=\"text-info\">\r\n                                                        Berry\r\n                                                    </span>\r\n                                                </h1>\r\n                                            </Link>\r\n                                        ) : (\r\n                                            <a href={logo.outterLink}>\r\n                                                <h1>\r\n                                                    Task\r\n                                                    <span className=\"text-info\">\r\n                                                        Berry\r\n                                                    </span>\r\n                                                </h1>\r\n                                            </a>\r\n                                        )}\r\n                                    </Col>\r\n                                ) : null}\r\n                                <Col className=\"collapse-close\" xs=\"6\">\r\n                                    <button\r\n                                        className=\"navbar-toggler\"\r\n                                        type=\"button\"\r\n                                        onClick={this.toggleCollapse}\r\n                                    >\r\n                                        <span />\r\n                                        <span />\r\n                                    </button>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                        {/* Navigation */}\r\n                        <Nav navbar>{this.createLinks(routes)}</Nav>\r\n                    </Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nSidebar.defaultProps = {\r\n    routes: [{}]\r\n};\r\n\r\nSidebar.propTypes = {\r\n    // links that will be displayed inside the component\r\n    routes: PropTypes.arrayOf(PropTypes.object),\r\n    logo: PropTypes.shape({\r\n        // innerLink is for links that will direct the user within the app\r\n        // it will be rendered as <Link to=\"...\">...</Link> tag\r\n        innerLink: PropTypes.string,\r\n        // outterLink is for links that will direct the user outside the app\r\n        // it will be rendered as simple <a href=\"...\">...</a> tag\r\n        outterLink: PropTypes.string,\r\n        // the image src of the logo\r\n        imgSrc: PropTypes.string.isRequired,\r\n        // the alt for the img\r\n        imgAlt: PropTypes.string.isRequired\r\n    })\r\n};\r\n\r\nexport default Sidebar;\r\n","/* eslint-disable react/forbid-prop-types */\r\nimport React from 'react';\r\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n// reactstrap components\r\nimport { Container } from 'reactstrap';\r\n\r\n// react-spinner component\r\nimport { ScaleLoader } from 'react-spinners';\r\n\r\n// REDUX\r\nimport { connect } from 'react-redux';\r\nimport { loadUser } from 'store/actions/authActions';\r\n\r\n// core components\r\nimport routeConfig from 'routes';\r\nimport AdminNavbar from 'components/Navbars/AdminNavbar';\r\nimport AdminFooter from 'components/Footers/AdminFooter';\r\nimport Sidebar from 'components/Sidebar/Sidebar';\r\n\r\nconst Logo = require('assets/img/brand/argon-react.png');\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <ScaleLoader height={90} width={7} radius={20} margin={7} />\r\n        </div>\r\n    );\r\n};\r\n\r\nclass Admin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.mainContentRef = React.createRef();\r\n        Admin.propTypes = {\r\n            // eslint-disable-next-line react/require-default-props\r\n            location: PropTypes.object\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.stateConsistencyCheck();\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    componentDidUpdate(e) {\r\n        this.stateConsistencyCheck();\r\n    }\r\n\r\n    stateConsistencyCheck = () => {\r\n        const { isAuthenticated, token, isLoading } = this.props;\r\n        if (!isLoading && !isAuthenticated && token !== null) {\r\n            // eslint-disable-next-line react/destructuring-assignment\r\n            this.props.loadUser();\r\n        }\r\n    };\r\n\r\n    getRoutes = (routes) => {\r\n        return routes.map((prop) => {\r\n            if (prop.layout === '/admin') {\r\n                return (\r\n                    <Route\r\n                        path={prop.layout + prop.path}\r\n                        component={prop.component}\r\n                        key={prop.name}\r\n                    />\r\n                );\r\n            }\r\n            return null;\r\n        });\r\n    };\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    getBrandText = (path) => {\r\n        const { location } = this.props;\r\n        const { pathname } = location;\r\n        for (let i = 0; i < routeConfig.length; i += 1) {\r\n            if (\r\n                pathname.indexOf(routeConfig[i].layout + routeConfig[i].path) !== -1\r\n            ) {\r\n                return routeConfig[i].name;\r\n            }\r\n        }\r\n        return 'Brand';\r\n    };\r\n\r\n    render() {\r\n        const { location, token, isLoading } = this.props;\r\n        if (!token) {\r\n            return <Redirect to=\"/auth/login\" />;\r\n        }\r\n        if (isLoading) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"container text-center\">\r\n                        <div className=\"col mt-9\">\r\n                            <Loader />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <>\r\n                <Sidebar\r\n                    {...this.props}\r\n                    routes={routeConfig}\r\n                    logo={{\r\n                        innerLink: '/admin/index',\r\n                        imgSrc: Logo,\r\n                        imgAlt: '...'\r\n                    }}\r\n                />\r\n                <div className=\"main-content\" ref={this.mainContentRef}>\r\n                    <AdminNavbar\r\n                        {...this.props}\r\n                        brandText={this.getBrandText(location.pathname)}\r\n                    />\r\n                    <Switch>\r\n                        {this.getRoutes(routeConfig)}\r\n                        <Redirect from=\"*\" to=\"/admin/index\" />\r\n                    </Switch>\r\n                    <Container fluid>\r\n                        <AdminFooter />\r\n                    </Container>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAdmin.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    token: PropTypes.string.isRequired,\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n    loadUser: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.auth.user,\r\n        token: state.auth.token,\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n        isLoading: state.auth.isLoading\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, { loadUser })(Admin));\r\n","/*eslint-disable*/\r\nimport React from 'react';\r\n\r\n// reactstrap components\r\nimport { NavItem, NavLink, Nav, Container, Row, Col } from 'reactstrap';\r\n\r\nclass Login extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <footer className=\"py-3\">\r\n                    <Container>\r\n                        <Row className=\"align-items-center justify-content-xl-between\">\r\n                            <Col xl=\"6\">\r\n                                <div className=\"copyright text-center text-xl-left text-muted\">\r\n                                    © 2020{' '}\r\n                                    <a\r\n                                        className=\"font-weight-bold ml-1\"\r\n                                        href=\"/\"\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        Task\r\n                                        <span className=\"text-info\">Berry</span>\r\n                                    </a>\r\n                                </div>\r\n                            </Col>\r\n                            <Col xl=\"6\">\r\n                                <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            href=\"/\"\r\n                                            target=\"_blank\"\r\n                                        >\r\n                                            TaskBerry\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            href=\"/\"\r\n                                            target=\"_blank\"\r\n                                        >\r\n                                            About Us\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            href=\"/\"\r\n                                            target=\"_blank\"\r\n                                        >\r\n                                            Blog\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                </Nav>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </footer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// reactstrap components\r\nimport {\r\n    UncontrolledCollapse,\r\n    NavbarBrand,\r\n    Navbar,\r\n    NavItem,\r\n    NavLink,\r\n    Nav,\r\n    Container,\r\n    Row,\r\n    Col\r\n} from 'reactstrap';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst AdminNavbar = (props) => {\r\n    return (\r\n        <>\r\n            <Navbar className=\"navbar-top navbar-horizontal navbar-dark\" expand=\"md\">\r\n                <Container className=\"px-4\">\r\n                    <NavbarBrand to=\"/\" tag={Link}>\r\n                        <h1>\r\n                            Task<span className=\"text-info\">Berry</span>\r\n                        </h1>\r\n                    </NavbarBrand>\r\n                    <button\r\n                        className=\"navbar-toggler\"\r\n                        id=\"navbar-collapse-main\"\r\n                        type=\"button\"\r\n                    >\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n                    <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\r\n                        <div className=\"navbar-collapse-header d-md-none\">\r\n                            <Row>\r\n                                <Col className=\"collapse-brand\" xs=\"6\">\r\n                                    <Link to=\"/\">\r\n                                        <h1>\r\n                                            Task\r\n                                            <span className=\"text-info\">Berry</span>\r\n                                        </h1>\r\n                                    </Link>\r\n                                </Col>\r\n                                <Col className=\"collapse-close\" xs=\"6\">\r\n                                    <button\r\n                                        className=\"navbar-toggler\"\r\n                                        id=\"navbar-collapse-main\"\r\n                                        type=\"button\"\r\n                                    >\r\n                                        <span />\r\n                                        <span />\r\n                                    </button>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link-icon\" to=\"/\" tag={Link}>\r\n                                    <span className=\"nav-link-inner--text\">\r\n                                        Dashboard\r\n                                    </span>\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className=\"nav-link-icon\"\r\n                                    to=\"/auth/register\"\r\n                                    tag={Link}\r\n                                >\r\n                                    <span className=\"nav-link-inner--text\">\r\n                                        Register\r\n                                    </span>\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className=\"nav-link-icon\"\r\n                                    to=\"/auth/login\"\r\n                                    tag={Link}\r\n                                >\r\n                                    <span className=\"nav-link-inner--text\">\r\n                                        Login\r\n                                    </span>\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </UncontrolledCollapse>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdminNavbar;\r\n","// reactstrap components\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport React from 'react';\r\nimport AuthFooter from 'components/Footers/AuthFooter';\r\nimport AuthNavbar from 'components/Navbars/AuthNavbar';\r\nimport routeConfig from 'routes';\r\n\r\n// core components\r\n\r\nclass Auth extends React.Component {\r\n    componentDidMount() {\r\n        document.body.classList.add('bg-default');\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.body.classList.remove('bg-default');\r\n    }\r\n\r\n    getRoutes = (routes) => {\r\n        return routes.map((prop) => {\r\n            if (prop.layout === '/auth') {\r\n                return (\r\n                    <Route\r\n                        path={prop.layout + prop.path}\r\n                        component={prop.component}\r\n                        key={prop.name}\r\n                    />\r\n                );\r\n            }\r\n            return null;\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"auth-bg-image main-content\">\r\n                    <AuthNavbar />\r\n                    <div className=\"header pt-6 pt-lg-6 pb-3 pb-lg-3\">\r\n                        <Container>\r\n                            <div className=\"header-body text-center mb-5\">\r\n                                <Row className=\"justify-content-center\">\r\n                                    <Col lg=\"5\" md=\"6\">\r\n                                        <h1 className=\"text-dark\">\r\n                                            Welcome to TaskBerry!\r\n                                        </h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        </Container>\r\n                    </div>\r\n                    {/* Page content */}\r\n                    <Container className=\"mt-2 pb-2\">\r\n                        <Row className=\"justify-content-center\">\r\n                            <Switch>\r\n                                {this.getRoutes(routeConfig)}\r\n                                <Redirect from=\"*\" to=\"/auth/login\" />\r\n                            </Switch>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n                <AuthFooter />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Auth;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport 'react-notification-alert/dist/animate.css';\r\nimport 'assets/plugins/nucleo/css/nucleo.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'assets/css/style.min.css';\r\nimport 'assets/css/custom.css';\r\n\r\nimport store from 'store/store';\r\nimport AdminLayout from 'layouts/Admin';\r\nimport AuthLayout from 'layouts/Auth';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route\r\n                    path=\"/admin\"\r\n                    render={(props) => <AdminLayout {...props} />}\r\n                />\r\n                <Route path=\"/auth\" render={(props) => <AuthLayout {...props} />} />\r\n                <Redirect from=\"/\" to=\"/auth/login\" />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}